{
  "version": 3,
  "sources": ["../../../../../apps/erpnext/erpnext/public/js/bank_reconciliation_tool/data_table_manager.js", "../../../../../apps/erpnext/erpnext/public/js/bank_reconciliation_tool/number_card.js", "../../../../../apps/erpnext/erpnext/public/js/bank_reconciliation_tool/dialog_manager.js"],
  "sourcesContent": ["frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.DataTableManager = class DataTableManager {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t\tthis.dialog_manager = new erpnext.accounts.bank_reconciliation.DialogManager(\n\t\t\tthis.company,\n\t\t\tthis.bank_account,\n\t\t\tthis.bank_statement_from_date,\n\t\t\tthis.bank_statement_to_date,\n\t\t\tthis.filter_by_reference_date,\n\t\t\tthis.from_reference_date,\n\t\t\tthis.to_reference_date\n\t\t);\n\t\tthis.make_dt();\n\t}\n\n\tmake_dt() {\n\t\tvar me = this;\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.get_bank_transactions\",\n\t\t\targs: {\n\t\t\t\tbank_account: this.bank_account,\n\t\t\t\tfrom_date: this.bank_statement_from_date,\n\t\t\t\tto_date: this.bank_statement_to_date,\n\t\t\t},\n\t\t\tcallback: function (response) {\n\t\t\t\tme.format_data(response.message);\n\t\t\t\tme.get_dt_columns();\n\t\t\t\tme.get_datatable();\n\t\t\t\tme.set_listeners();\n\t\t\t},\n\t\t});\n\t}\n\n\tget_dt_columns() {\n\t\tthis.columns = [\n\t\t\t{\n\t\t\t\tname: __(\"Date\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 100,\n\t\t\t\tformat: frappe.form.formatters.Date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Party Type\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 95,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Party\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 100,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Description\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 350,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Deposit\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 100,\n\t\t\t\tformat: (value) =>\n\t\t\t\t\t\"<span style='color:green;'>\" + format_currency(value, this.currency) + \"</span>\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Withdrawal\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 100,\n\t\t\t\tformat: (value) =>\n\t\t\t\t\t\"<span style='color:red;'>\" + format_currency(value, this.currency) + \"</span>\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Unallocated Amount\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 100,\n\t\t\t\tformat: (value) =>\n\t\t\t\t\t\"<span style='color:var(--blue-500);'>\" +\n\t\t\t\t\tformat_currency(value, this.currency) +\n\t\t\t\t\t\"</span>\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Reference Number\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 140,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Actions\"),\n\t\t\t\teditable: false,\n\t\t\t\tsortable: false,\n\t\t\t\tfocusable: false,\n\t\t\t\tdropdown: false,\n\t\t\t\twidth: 100,\n\t\t\t},\n\t\t];\n\t}\n\n\tformat_data(transactions) {\n\t\tthis.transactions = [];\n\t\tif (transactions[0]) {\n\t\t\tthis.currency = transactions[0][\"currency\"];\n\t\t}\n\t\tthis.transaction_dt_map = {};\n\t\tlet length;\n\t\ttransactions.forEach((row) => {\n\t\t\tlength = this.transactions.push(this.format_row(row));\n\t\t\tthis.transaction_dt_map[row[\"name\"]] = length - 1;\n\t\t});\n\t}\n\n\tformat_row(row) {\n\t\treturn [\n\t\t\trow[\"date\"],\n\t\t\trow[\"party_type\"],\n\t\t\tfrappe.form.formatters.Link(row[\"party\"], { options: row[\"party_type\"] }),\n\t\t\trow[\"description\"],\n\t\t\trow[\"deposit\"],\n\t\t\trow[\"withdrawal\"],\n\t\t\trow[\"unallocated_amount\"],\n\t\t\trow[\"reference_number\"],\n\t\t\t`<button class=\"btn btn-primary btn-xs center\" data-name=\"${row[\"name\"]}\">${__(\n\t\t\t\t\"Actions\"\n\t\t\t)}</button>`,\n\t\t];\n\t}\n\n\tget_datatable() {\n\t\tconst datatable_options = {\n\t\t\tcolumns: this.columns,\n\t\t\tdata: this.transactions,\n\t\t\tdynamicRowHeight: true,\n\t\t\tcheckboxColumn: false,\n\t\t\tinlineFilters: true,\n\t\t};\n\t\tthis.datatable = new frappe.DataTable(this.$reconciliation_tool_dt.get(0), datatable_options);\n\t\t$(`.${this.datatable.style.scopeClass} .dt-scrollable`).css(\"max-height\", \"calc(100vh - 400px)\");\n\n\t\tif (this.transactions.length > 0) {\n\t\t\tthis.$reconciliation_tool_dt.show();\n\t\t\tthis.$no_bank_transactions.hide();\n\t\t} else {\n\t\t\tthis.$reconciliation_tool_dt.hide();\n\t\t\tthis.$no_bank_transactions.show();\n\t\t}\n\t}\n\n\tset_listeners() {\n\t\tvar me = this;\n\t\t$(`.${this.datatable.style.scopeClass} .dt-scrollable`).on(\"click\", `.btn`, function () {\n\t\t\tme.dialog_manager.show_dialog($(this).attr(\"data-name\"), (bank_transaction) =>\n\t\t\t\tme.update_dt_cards(bank_transaction)\n\t\t\t);\n\t\t\treturn true;\n\t\t});\n\t}\n\n\tupdate_dt_cards(bank_transaction) {\n\t\tconst transaction_index = this.transaction_dt_map[bank_transaction.name];\n\t\tif (bank_transaction.unallocated_amount > 0) {\n\t\t\tthis.transactions[transaction_index] = this.format_row(bank_transaction);\n\t\t} else {\n\t\t\tthis.transactions.splice(transaction_index, 1);\n\t\t\tfor (const [k, v] of Object.entries(this.transaction_dt_map)) {\n\t\t\t\tif (v > transaction_index) this.transaction_dt_map[k] = v - 1;\n\t\t\t}\n\t\t}\n\t\tthis.datatable.refresh(this.transactions, this.columns);\n\n\t\tif (this.transactions.length == 0) {\n\t\t\tthis.$reconciliation_tool_dt.hide();\n\t\t\tthis.$no_bank_transactions.show();\n\t\t}\n\n\t\t// this.make_dt();\n\t\tthis.get_cleared_balance().then(() => {\n\t\t\tthis.cards_manager.$cards[1].set_value(format_currency(this.cleared_balance), this.currency);\n\t\t\tthis.cards_manager.$cards[2].set_value(\n\t\t\t\tformat_currency(this.bank_statement_closing_balance - this.cleared_balance),\n\t\t\t\tthis.currency\n\t\t\t);\n\t\t\tthis.cards_manager.$cards[2].set_value_color(\n\t\t\t\tthis.bank_statement_closing_balance - this.cleared_balance == 0\n\t\t\t\t\t? \"text-success\"\n\t\t\t\t\t: \"text-danger\"\n\t\t\t);\n\t\t});\n\t}\n\n\tget_cleared_balance() {\n\t\tif (this.bank_account && this.bank_statement_to_date) {\n\t\t\treturn frappe.call({\n\t\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.get_account_balance\",\n\t\t\t\targs: {\n\t\t\t\t\tbank_account: this.bank_account,\n\t\t\t\t\ttill_date: this.bank_statement_to_date,\n\t\t\t\t},\n\t\t\t\tcallback: (response) => (this.cleared_balance = response.message),\n\t\t\t});\n\t\t}\n\t}\n};\n", "frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.NumberCardManager = class NumberCardManager {\n\tconstructor(opts) {\n\t\tObject.assign(this, opts);\n\t\tthis.make_cards();\n\t}\n\n\tmake_cards() {\n\t\tthis.$reconciliation_tool_cards.empty();\n\t\tthis.$cards = [];\n\t\tthis.$summary = $(`<div class=\"report-summary\"></div>`)\n\t\t\t.hide()\n\t\t\t.appendTo(this.$reconciliation_tool_cards);\n\t\tvar chart_data = [\n\t\t\t{\n\t\t\t\tvalue: this.bank_statement_closing_balance,\n\t\t\t\tlabel: __(\"Closing Balance as per Bank Statement\"),\n\t\t\t\tdatatype: \"Currency\",\n\t\t\t\tcurrency: this.currency,\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: this.cleared_balance,\n\t\t\t\tlabel: __(\"Closing Balance as per ERP\"),\n\t\t\t\tdatatype: \"Currency\",\n\t\t\t\tcurrency: this.currency,\n\t\t\t},\n\t\t\t{\n\t\t\t\tvalue: this.bank_statement_closing_balance - this.cleared_balance,\n\t\t\t\tlabel: __(\"Difference\"),\n\t\t\t\tdatatype: \"Currency\",\n\t\t\t\tcurrency: this.currency,\n\t\t\t},\n\t\t];\n\n\t\tchart_data.forEach((summary) => {\n\t\t\tlet number_card = new erpnext.accounts.NumberCard(summary);\n\t\t\tthis.$cards.push(number_card);\n\n\t\t\tnumber_card.$card.appendTo(this.$summary);\n\t\t});\n\t\tthis.$cards[2].set_value_color(\n\t\t\tthis.bank_statement_closing_balance - this.cleared_balance == 0 ? \"text-success\" : \"text-danger\"\n\t\t);\n\t\tthis.$summary.css({ \"border-bottom\": \"0px\", \"margin-left\": \"0px\", \"margin-right\": \"0px\" });\n\t\tthis.$summary.show();\n\t}\n};\n\nerpnext.accounts.NumberCard = class NumberCard {\n\tconstructor(options) {\n\t\tthis.$card = frappe.utils.build_summary_item(options);\n\t}\n\n\tset_value(value) {\n\t\tthis.$card.find(\"div\").text(value);\n\t}\n\n\tset_value_color(color) {\n\t\tthis.$card.find(\"div\").removeClass(\"text-danger text-success\").addClass(`${color}`);\n\t}\n\n\tset_indicator(color) {\n\t\tthis.$card.find(\"span\").removeClass(\"indicator red green\").addClass(`indicator ${color}`);\n\t}\n};\n", "frappe.provide(\"erpnext.accounts.bank_reconciliation\");\n\nerpnext.accounts.bank_reconciliation.DialogManager = class DialogManager {\n\tconstructor(\n\t\tcompany,\n\t\tbank_account,\n\t\tbank_statement_from_date,\n\t\tbank_statement_to_date,\n\t\tfilter_by_reference_date,\n\t\tfrom_reference_date,\n\t\tto_reference_date\n\t) {\n\t\tthis.bank_account = bank_account;\n\t\tthis.company = company;\n\t\tthis.make_dialog();\n\t\tthis.bank_statement_from_date = bank_statement_from_date;\n\t\tthis.bank_statement_to_date = bank_statement_to_date;\n\t\tthis.filter_by_reference_date = filter_by_reference_date;\n\t\tthis.from_reference_date = from_reference_date;\n\t\tthis.to_reference_date = to_reference_date;\n\t}\n\tshow_dialog(bank_transaction_name, update_dt_cards) {\n\t\tthis.bank_transaction_name = bank_transaction_name;\n\t\tthis.update_dt_cards = update_dt_cards;\n\t\tfrappe.call({\n\t\t\tmethod: \"frappe.client.get_value\",\n\t\t\targs: {\n\t\t\t\tdoctype: \"Bank Transaction\",\n\t\t\t\tfilters: { name: this.bank_transaction_name },\n\t\t\t\tfieldname: [\n\t\t\t\t\t\"date\",\n\t\t\t\t\t\"deposit\",\n\t\t\t\t\t\"withdrawal\",\n\t\t\t\t\t\"currency\",\n\t\t\t\t\t\"description\",\n\t\t\t\t\t\"name\",\n\t\t\t\t\t\"bank_account\",\n\t\t\t\t\t\"company\",\n\t\t\t\t\t\"reference_number\",\n\t\t\t\t\t\"party_type\",\n\t\t\t\t\t\"party\",\n\t\t\t\t\t\"unallocated_amount\",\n\t\t\t\t\t\"allocated_amount\",\n\t\t\t\t\t\"transaction_type\",\n\t\t\t\t],\n\t\t\t},\n\t\t\tcallback: (r) => {\n\t\t\t\tif (r.message) {\n\t\t\t\t\tthis.bank_transaction = r.message;\n\t\t\t\t\tr.message.payment_entry = 1;\n\t\t\t\t\tr.message.journal_entry = 1;\n\t\t\t\t\tthis.dialog.set_values(r.message);\n\t\t\t\t\tthis.copy_data_to_voucher();\n\t\t\t\t\tthis.dialog.show();\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t}\n\n\tcopy_data_to_voucher() {\n\t\tlet copied = {\n\t\t\treference_number: this.bank_transaction.reference_number || this.bank_transaction.description,\n\t\t\tposting_date: this.bank_transaction.date,\n\t\t\treference_date: this.bank_transaction.date,\n\t\t\tmode_of_payment: this.bank_transaction.transaction_type,\n\t\t};\n\t\tthis.dialog.set_values(copied);\n\t}\n\n\tget_linked_vouchers(document_types) {\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.get_linked_payments\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: this.bank_transaction_name,\n\t\t\t\tdocument_types: document_types,\n\t\t\t\tfrom_date: this.bank_statement_from_date,\n\t\t\t\tto_date: this.bank_statement_to_date,\n\t\t\t\tfilter_by_reference_date: this.filter_by_reference_date,\n\t\t\t\tfrom_reference_date: this.from_reference_date,\n\t\t\t\tto_reference_date: this.to_reference_date,\n\t\t\t},\n\n\t\t\tcallback: (result) => {\n\t\t\t\tconst data = result.message;\n\n\t\t\t\tif (data && data.length > 0) {\n\t\t\t\t\tconst proposals_wrapper = this.dialog.fields_dict.payment_proposals.$wrapper;\n\t\t\t\t\tproposals_wrapper.show();\n\t\t\t\t\tthis.dialog.fields_dict.no_matching_vouchers.$wrapper.hide();\n\t\t\t\t\tthis.data = data.map((row) => this.format_row(row));\n\t\t\t\t\tthis.get_dt_columns();\n\t\t\t\t\tthis.get_datatable(proposals_wrapper);\n\t\t\t\t} else {\n\t\t\t\t\tconst proposals_wrapper = this.dialog.fields_dict.payment_proposals.$wrapper;\n\t\t\t\t\tproposals_wrapper.hide();\n\t\t\t\t\tthis.dialog.fields_dict.no_matching_vouchers.$wrapper.show();\n\t\t\t\t}\n\t\t\t\tthis.dialog.show();\n\t\t\t},\n\t\t});\n\t}\n\n\tget_dt_columns() {\n\t\tthis.columns = [\n\t\t\t{\n\t\t\t\tname: __(\"Document Type\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 125,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Document Name\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 1,\n\t\t\t\tformat: (value, row) => {\n\t\t\t\t\treturn frappe.form.formatters.Link(value, { options: row[2].content });\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Reference Date\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 120,\n\t\t\t\tformat: frappe.form.formatters.Date,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Remaining\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 100,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Reference Number\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 200,\n\t\t\t},\n\t\t\t{\n\t\t\t\tname: __(\"Party\"),\n\t\t\t\teditable: false,\n\t\t\t\twidth: 100,\n\t\t\t},\n\t\t];\n\t}\n\n\tformat_row(row) {\n\t\treturn [\n\t\t\trow[\"doctype\"],\n\t\t\trow[\"name\"],\n\t\t\trow[\"reference_date\"] || row[\"posting_date\"],\n\t\t\tformat_currency(row[\"paid_amount\"], row[\"currency\"]),\n\t\t\trow[\"reference_no\"],\n\t\t\trow[\"party\"],\n\t\t];\n\t}\n\n\tget_datatable(proposals_wrapper) {\n\t\tif (!this.datatable) {\n\t\t\tconst datatable_options = {\n\t\t\t\tcolumns: this.columns,\n\t\t\t\tdata: this.data,\n\t\t\t\tdynamicRowHeight: true,\n\t\t\t\tcheckboxColumn: true,\n\t\t\t\tinlineFilters: true,\n\t\t\t};\n\t\t\tthis.datatable = new frappe.DataTable(proposals_wrapper.get(0), datatable_options);\n\t\t} else {\n\t\t\tthis.datatable.refresh(this.data, this.columns);\n\t\t\tthis.datatable.rowmanager.checkMap = [];\n\t\t}\n\t}\n\n\tmake_dialog() {\n\t\tconst me = this;\n\t\tme.selected_payment = null;\n\n\t\tconst fields = [\n\t\t\t{\n\t\t\t\tlabel: __(\"Action\"),\n\t\t\t\tfieldname: \"action\",\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\toptions: `Match Against Voucher\\nCreate Voucher\\nUpdate Bank Transaction`,\n\t\t\t\tdefault: \"Match Against Voucher\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"column_break_4\",\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tlabel: __(\"Document Type\"),\n\t\t\t\tfieldname: \"document_type\",\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\toptions: `Payment Entry\\nJournal Entry`,\n\t\t\t\tdefault: \"Payment Entry\",\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tfieldname: \"section_break_1\",\n\t\t\t\tlabel: __(\"Filters\"),\n\t\t\t\tdepends_on: \"eval:doc.action=='Match Against Voucher'\",\n\t\t\t},\n\t\t];\n\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_transaction.bank_transaction.get_doctypes_for_bank_reconciliation\",\n\t\t\tcallback: (r) => {\n\t\t\t\t$.each(r.message, (_i, entry) => {\n\t\t\t\t\tif (_i % 3 == 0) {\n\t\t\t\t\t\tfields.push({\n\t\t\t\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\tfields.push({\n\t\t\t\t\t\tfieldtype: \"Check\",\n\t\t\t\t\t\tlabel: entry,\n\t\t\t\t\t\tfieldname: frappe.scrub(entry),\n\t\t\t\t\t\tonchange: () => this.update_options(),\n\t\t\t\t\t});\n\t\t\t\t});\n\n\t\t\t\tfields.push(...this.get_voucher_fields());\n\n\t\t\t\tme.dialog = new frappe.ui.Dialog({\n\t\t\t\t\ttitle: __(\"Reconcile the Bank Transaction\"),\n\t\t\t\t\tfields: fields,\n\t\t\t\t\tsize: \"large\",\n\t\t\t\t\tprimary_action: (values) => this.reconciliation_dialog_primary_action(values),\n\t\t\t\t});\n\t\t\t},\n\t\t});\n\t}\n\n\tget_voucher_fields() {\n\t\treturn [\n\t\t\t{\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tlabel: \"Show Only Exact Amount\",\n\t\t\t\tfieldname: \"exact_match\",\n\t\t\t\tonchange: () => this.update_options(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"column_break_5\",\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Check\",\n\t\t\t\tlabel: \"Bank Transaction\",\n\t\t\t\tfieldname: \"bank_transaction\",\n\t\t\t\tonchange: () => this.update_options(),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tfieldname: \"section_break_1\",\n\t\t\t\tlabel: __(\"Select Vouchers to Match\"),\n\t\t\t\tdepends_on: \"eval:doc.action=='Match Against Voucher'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\tfieldname: \"payment_proposals\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"HTML\",\n\t\t\t\tfieldname: \"no_matching_vouchers\",\n\t\t\t\toptions: __('<div class=\"text-muted text-center\">{0}</div>', [\n\t\t\t\t\t__(\"No Matching Vouchers Found\"),\n\t\t\t\t]),\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tfieldname: \"details\",\n\t\t\t\tlabel: \"Details\",\n\t\t\t\tdepends_on: \"eval:doc.action!='Match Against Voucher'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"reference_number\",\n\t\t\t\tfieldtype: \"Data\",\n\t\t\t\tlabel: \"Reference Number\",\n\t\t\t\tmandatory_depends_on: \"eval:doc.action=='Create Voucher'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdefault: \"Today\",\n\t\t\t\tfieldname: \"posting_date\",\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: \"Posting Date\",\n\t\t\t\treqd: 1,\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"reference_date\",\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: \"Cheque/Reference Date\",\n\t\t\t\tmandatory_depends_on: \"eval:doc.action=='Create Voucher'\",\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher'\",\n\t\t\t\treqd: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"mode_of_payment\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Mode of Payment\",\n\t\t\t\toptions: \"Mode of Payment\",\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"edit_in_full_page\",\n\t\t\t\tfieldtype: \"Button\",\n\t\t\t\tlabel: \"Edit in Full Page\",\n\t\t\t\tclick: () => {\n\t\t\t\t\tthis.edit_in_full_page();\n\t\t\t\t},\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"column_break_7\",\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tdefault: \"Bank Entry\",\n\t\t\t\tfieldname: \"journal_entry_type\",\n\t\t\t\tfieldtype: \"Select\",\n\t\t\t\tlabel: \"Journal Entry Type\",\n\t\t\t\toptions:\n\t\t\t\t\t\"Journal Entry\\nInter Company Journal Entry\\nBank Entry\\nCash Entry\\nCredit Card Entry\\nDebit Note\\nCredit Note\\nContra Entry\\nExcise Entry\\nWrite Off Entry\\nOpening Entry\\nDepreciation Entry\\nExchange Rate Revaluation\\nDeferred Revenue\\nDeferred Expense\",\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'\",\n\t\t\t\tmandatory_depends_on:\n\t\t\t\t\t\"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"second_account\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Account\",\n\t\t\t\toptions: \"Account\",\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'\",\n\t\t\t\tmandatory_depends_on:\n\t\t\t\t\t\"eval:doc.action=='Create Voucher' &&  doc.document_type=='Journal Entry'\",\n\t\t\t\tget_query: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tis_group: 0,\n\t\t\t\t\t\t\tcompany: this.company,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"party_type\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Party Type\",\n\t\t\t\toptions: \"DocType\",\n\t\t\t\tmandatory_depends_on:\n\t\t\t\t\t\"eval:doc.action=='Create Voucher' &&  doc.document_type=='Payment Entry'\",\n\t\t\t\tget_query: function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tname: [\"in\", Object.keys(frappe.boot.party_account_types)],\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"party\",\n\t\t\t\tfieldtype: \"Dynamic Link\",\n\t\t\t\tlabel: \"Party\",\n\t\t\t\toptions: \"party_type\",\n\t\t\t\tmandatory_depends_on:\n\t\t\t\t\t\"eval:doc.action=='Create Voucher' && doc.document_type=='Payment Entry'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"project\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Project\",\n\t\t\t\toptions: \"Project\",\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher' && doc.document_type=='Payment Entry'\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"cost_center\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Cost Center\",\n\t\t\t\toptions: \"Cost Center\",\n\t\t\t\tdepends_on: \"eval:doc.action=='Create Voucher' && doc.document_type=='Payment Entry'\",\n\t\t\t\tget_query: () => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfilters: {\n\t\t\t\t\t\t\tis_group: 0,\n\t\t\t\t\t\t\tcompany: this.company,\n\t\t\t\t\t\t},\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldtype: \"Section Break\",\n\t\t\t\tfieldname: \"details_section\",\n\t\t\t\tlabel: \"Transaction Details\",\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"date\",\n\t\t\t\tfieldtype: \"Date\",\n\t\t\t\tlabel: \"Date\",\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"deposit\",\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tlabel: \"Deposit\",\n\t\t\t\toptions: \"account_currency\",\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"withdrawal\",\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tlabel: \"Withdrawal\",\n\t\t\t\toptions: \"account_currency\",\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"column_break_17\",\n\t\t\t\tfieldtype: \"Column Break\",\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"description\",\n\t\t\t\tfieldtype: \"Small Text\",\n\t\t\t\tlabel: \"Description\",\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"allocated_amount\",\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tlabel: \"Allocated Amount\",\n\t\t\t\toptions: \"account_currency\",\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"unallocated_amount\",\n\t\t\t\tfieldtype: \"Currency\",\n\t\t\t\tlabel: \"Unallocated Amount\",\n\t\t\t\toptions: \"account_currency\",\n\t\t\t\tread_only: 1,\n\t\t\t},\n\t\t\t{\n\t\t\t\tfieldname: \"account_currency\",\n\t\t\t\tfieldtype: \"Link\",\n\t\t\t\tlabel: \"Currency\",\n\t\t\t\toptions: \"Currency\",\n\t\t\t\tread_only: 1,\n\t\t\t\thidden: 1,\n\t\t\t},\n\t\t];\n\t}\n\n\tget_selected_attributes() {\n\t\tlet selected_attributes = [];\n\t\tthis.dialog.$wrapper.find(\".checkbox input\").each((i, col) => {\n\t\t\tif ($(col).is(\":checked\")) {\n\t\t\t\tselected_attributes.push($(col).attr(\"data-fieldname\"));\n\t\t\t}\n\t\t});\n\n\t\treturn selected_attributes;\n\t}\n\n\tupdate_options() {\n\t\tlet selected_attributes = this.get_selected_attributes();\n\t\tthis.get_linked_vouchers(selected_attributes);\n\t}\n\n\treconciliation_dialog_primary_action(values) {\n\t\tif (values.action == \"Match Against Voucher\") this.match(values);\n\t\tif (values.action == \"Create Voucher\" && values.document_type == \"Payment Entry\")\n\t\t\tthis.add_payment_entry(values);\n\t\tif (values.action == \"Create Voucher\" && values.document_type == \"Journal Entry\")\n\t\t\tthis.add_journal_entry(values);\n\t\telse if (values.action == \"Update Bank Transaction\") this.update_transaction(values);\n\t}\n\n\tmatch() {\n\t\tvar selected_map = this.datatable.rowmanager.checkMap;\n\t\tlet rows = [];\n\t\tselected_map.forEach((val, index) => {\n\t\t\tif (val == 1) rows.push(this.datatable.datamanager.rows[index]);\n\t\t});\n\t\tlet vouchers = [];\n\t\trows.forEach((x) => {\n\t\t\tvouchers.push({\n\t\t\t\tpayment_doctype: x[2].content,\n\t\t\t\tpayment_name: x[3].content,\n\t\t\t\tamount: x[5].content,\n\t\t\t});\n\t\t});\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.reconcile_vouchers\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: this.bank_transaction.name,\n\t\t\t\tvouchers: vouchers,\n\t\t\t},\n\t\t\tcallback: (response) => {\n\t\t\t\tconst alert_string = __(\"Bank Transaction {0} Matched\", [this.bank_transaction.name]);\n\t\t\t\tfrappe.show_alert(alert_string);\n\t\t\t\tthis.update_dt_cards(response.message);\n\t\t\t\tthis.dialog.hide();\n\t\t\t},\n\t\t});\n\t}\n\n\tadd_payment_entry(values) {\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_payment_entry_bts\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: this.bank_transaction.name,\n\t\t\t\treference_number: values.reference_number,\n\t\t\t\treference_date: values.reference_date,\n\t\t\t\tparty_type: values.party_type,\n\t\t\t\tparty: values.party,\n\t\t\t\tposting_date: values.posting_date,\n\t\t\t\tmode_of_payment: values.mode_of_payment,\n\t\t\t\tproject: values.project,\n\t\t\t\tcost_center: values.cost_center,\n\t\t\t},\n\t\t\tcallback: (response) => {\n\t\t\t\tconst alert_string = __(\"Bank Transaction {0} added as Payment Entry\", [\n\t\t\t\t\tthis.bank_transaction.name,\n\t\t\t\t]);\n\t\t\t\tfrappe.show_alert(alert_string);\n\t\t\t\tthis.update_dt_cards(response.message);\n\t\t\t\tthis.dialog.hide();\n\t\t\t},\n\t\t});\n\t}\n\n\tadd_journal_entry(values) {\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_journal_entry_bts\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: this.bank_transaction.name,\n\t\t\t\treference_number: values.reference_number,\n\t\t\t\treference_date: values.reference_date,\n\t\t\t\tparty_type: values.party_type,\n\t\t\t\tparty: values.party,\n\t\t\t\tposting_date: values.posting_date,\n\t\t\t\tmode_of_payment: values.mode_of_payment,\n\t\t\t\tentry_type: values.journal_entry_type,\n\t\t\t\tsecond_account: values.second_account,\n\t\t\t},\n\t\t\tcallback: (response) => {\n\t\t\t\tconst alert_string = __(\"Bank Transaction {0} added as Journal Entry\", [\n\t\t\t\t\tthis.bank_transaction.name,\n\t\t\t\t]);\n\t\t\t\tfrappe.show_alert(alert_string);\n\t\t\t\tthis.update_dt_cards(response.message);\n\t\t\t\tthis.dialog.hide();\n\t\t\t},\n\t\t});\n\t}\n\n\tupdate_transaction(values) {\n\t\tfrappe.call({\n\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.update_bank_transaction\",\n\t\t\targs: {\n\t\t\t\tbank_transaction_name: this.bank_transaction.name,\n\t\t\t\treference_number: values.reference_number,\n\t\t\t\tparty_type: values.party_type,\n\t\t\t\tparty: values.party,\n\t\t\t},\n\t\t\tcallback: (response) => {\n\t\t\t\tconst alert_string = __(\"Bank Transaction {0} updated\", [this.bank_transaction.name]);\n\t\t\t\tfrappe.show_alert(alert_string);\n\t\t\t\tthis.update_dt_cards(response.message);\n\t\t\t\tthis.dialog.hide();\n\t\t\t},\n\t\t});\n\t}\n\n\tedit_in_full_page() {\n\t\tconst values = this.dialog.get_values(true);\n\t\tif (values.document_type == \"Payment Entry\") {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_payment_entry_bts\",\n\t\t\t\targs: {\n\t\t\t\t\tbank_transaction_name: this.bank_transaction.name,\n\t\t\t\t\treference_number: values.reference_number,\n\t\t\t\t\treference_date: values.reference_date,\n\t\t\t\t\tparty_type: values.party_type,\n\t\t\t\t\tparty: values.party,\n\t\t\t\t\tposting_date: values.posting_date,\n\t\t\t\t\tmode_of_payment: values.mode_of_payment,\n\t\t\t\t\tproject: values.project,\n\t\t\t\t\tcost_center: values.cost_center,\n\t\t\t\t\tallow_edit: true,\n\t\t\t\t},\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tconst doc = frappe.model.sync(r.message);\n\t\t\t\t\tfrappe.set_route(\"Form\", doc[0].doctype, doc[0].name);\n\t\t\t\t},\n\t\t\t});\n\t\t} else {\n\t\t\tfrappe.call({\n\t\t\t\tmethod: \"erpnext.accounts.doctype.bank_reconciliation_tool.bank_reconciliation_tool.create_journal_entry_bts\",\n\t\t\t\targs: {\n\t\t\t\t\tbank_transaction_name: this.bank_transaction.name,\n\t\t\t\t\treference_number: values.reference_number,\n\t\t\t\t\treference_date: values.reference_date,\n\t\t\t\t\tparty_type: values.party_type,\n\t\t\t\t\tparty: values.party,\n\t\t\t\t\tposting_date: values.posting_date,\n\t\t\t\t\tmode_of_payment: values.mode_of_payment,\n\t\t\t\t\tentry_type: values.journal_entry_type,\n\t\t\t\t\tsecond_account: values.second_account,\n\t\t\t\t\tallow_edit: true,\n\t\t\t\t},\n\t\t\t\tcallback: (r) => {\n\t\t\t\t\tvar doc = frappe.model.sync(r.message);\n\t\t\t\t\tfrappe.set_route(\"Form\", doc[0].doctype, doc[0].name);\n\t\t\t\t},\n\t\t\t});\n\t\t}\n\t}\n};\n"],
  "mappings": "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MAAO,CACN,CACC,UAAW,QACX,MAAO,yBACP,UAAW,cACX,SAAU,IAAM,KAAK,eAAe,CACrC,EACA,CACC,UAAW,iBACX,UAAW,cACZ,EACA,CACC,UAAW,QACX,MAAO,mBACP,UAAW,mBACX,SAAU,IAAM,KAAK,eAAe,CACrC,EACA,CACC,UAAW,gBACX,UAAW,kBACX,MAAO,GAAG,0BAA0B,EACpC,WAAY,0CACb,EACA,CACC,UAAW,OACX,UAAW,mBACZ,EACA,CACC,UAAW,OACX,UAAW,uBACX,QAAS,GAAG,gDAAiD,CAC5D,GAAG,4BAA4B,CAChC,CAAC,CACF,EACA,CACC,UAAW,gBACX,UAAW,UACX,MAAO,UACP,WAAY,0CACb,EACA,CACC,UAAW,mBACX,UAAW,OACX,MAAO,mBACP,qBAAsB,mCACvB,EACA,CACC,QAAS,QACT,UAAW,eACX,UAAW,OACX,MAAO,eACP,KAAM,EACN,WAAY,mCACb,EACA,CACC,UAAW,iBACX,UAAW,OACX,MAAO,wBACP,qBAAsB,oCACtB,WAAY,oCACZ,KAAM,CACP,EACA,CACC,UAAW,kBACX,UAAW,OACX,MAAO,kBACP,QAAS,kBACT,WAAY,mCACb,EACA,CACC,UAAW,oBACX,UAAW,SACX,MAAO,oBACP,MAAO,IAAM,CACZ,KAAK,kBAAkB,CACxB,EACA,WAAY,mCACb,EACA,CACC,UAAW,iBACX,UAAW,cACZ,EACA,CACC,QAAS,aACT,UAAW,qBACX,UAAW,SACX,MAAO,qBACP,QACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACD,WAAY,2EACZ,qBACC,0EACF,EACA,CACC,UAAW,iBACX,UAAW,OACX,MAAO,UACP,QAAS,UACT,WAAY,2EACZ,qBACC,2EACD,UAAW,KACH,CACN,QAAS,CACR,SAAU,EACV,QAAS,KAAK,OACf,CACD,EAEF,EACA,CACC,UAAW,aACX,UAAW,OACX,MAAO,aACP,QAAS,UACT,qBACC,2EACD,UAAW,UAAY,CACtB,MAAO,CACN,QAAS,CACR,KAAM,CAAC,KAAM,OAAO,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",
  "names": ["opts", "me", "response", "value", "transactions", "length", "row", "datatable_options", "bank_transaction", "transaction_index", "k", "v", "opts", "chart_data", "summary", "number_card", "options", "value", "color", "company", "bank_account", "bank_statement_from_date", "bank_statement_to_date", "filter_by_reference_date", "from_reference_date", "to_reference_date", "bank_transaction_name", "update_dt_cards", "r", "copied", "document_types", "result", "data", "proposals_wrapper", "row", "value", "datatable_options", "me", "fields", "_i", "entry", "values", "selected_attributes", "i", "col", "selected_map", "rows", "val", "index", "vouchers", "x", "response", "alert_string", "doc"]
}
